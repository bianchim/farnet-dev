<?php

/**
 * @file
 * Drupal needs this blank file.
 */

/**
 * Implements hook_block_info().
 */
function farnet_menu_content_block_info() {
  $blocks = array();

  $blocks['farnet_menu_content_menu_page'] = array(
    'info' => t('Farnet Field Group Menu Page'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function farnet_menu_content_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'farnet_menu_content_menu_page':
      $block['subject'] = '';
      $block['content'] = array(
        '#markup' => _farnet_menu_content_menu_page_content(),
        '#attached' => array(
          'css' => array(
            drupal_get_path('module', 'farnet_menu_content') . '/css/farnet_menu_content_block.css',
          ),
          'js' => array(
            drupal_get_path('module', 'farnet_menu_content') . '/js/farnet_menu_content_block.js',
          ),
        ),
      );

      break;
  }

  return $block;
}

/**
 * Implement the content of the block.
 */
function _farnet_menu_content_menu_page_content() {
  global $language;

  $node = menu_get_object();
  $field_groups = field_group_info_groups('node', $node->type, 'default');
  $field_groups_sorted = array();

  foreach ($field_groups as $field_group) {
    if ($field_group->format_type == 'div') {
      // Check if children are empty.
      $is_empty = TRUE;

      foreach ($field_group->children as $field) {
        $field_info = field_info_field($field);

        // Manage viewfield.
        if ($field_info['type'] == 'viewfield') {
          $field_info_instance = field_info_instance('node', $field, 'factsheet_flag');
          $view_params = explode("|", $field_info_instance['default_value'][0]['vname']);
          $results = views_get_view_result($view_params[0], $view_params[1], $node->nid);
          if (count($results) == 0) {
            // View empty.
            break;
          }
        }

        // Check for data in the field.
        if (!empty($node->{$field})) {
          // Check if there is data in the current language.
          $und_language = isset($node->{$field}[LANGUAGE_NONE]);
          $current_language = isset($node->{$field}[$language->language]);
          if ($current_language || $und_language) {
            $is_empty = FALSE;
            break;
          }
        }
      }

      if (!$is_empty) {
        $field_groups_sorted[$field_group->weight] = $field_group;
      }
    }
  }

  ksort($field_groups_sorted);
  $output = '<div><nav id="navbar-node-page" class="navbar"><ul class="nav">';
  foreach ($field_groups_sorted as $field_group) {
    $classes = $field_group->format_settings['instance_settings']['classes'];

    if (strpos($classes, 'no-menu-content') !== FALSE) {
      continue;
    }

    $group_name = str_replace('_', '-', $field_group->group_name);
    if ($field_group->group_name != 'group_factsheet_flag_contact') {
      $label = locale($field_group->label, NULL, $language->language);
      $output .= '<li><a href="#' . $group_name . '">' . $label . '</a></li>';
    }
  }

  $menu_name = t('Contact details');
  $item = menu_get_item();
  if (isset($item['page_arguments'][0]->type) && $item['page_arguments'][0]->type === 'factsheet_flag') {
    $menu_name = t('FLAG Contacts');
  }

  // Create entry for contact details.
  if (isset($GLOBALS['CT_has_contact']) &&  $GLOBALS['CT_has_contact'] == TRUE) {
    // Avoid issue with PHPCS and hardcoded links.
    $id = 'group_contact_details';
    $output .= '<li><a href="#' . $id . '">' . $menu_name . '</a></li>';
  }

  $output .= '</ul></nav></div>';

  return $output;
}
