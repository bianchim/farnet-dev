<?php

/**
 * @file
 * Install, uninstall, schema and update hooks for farnet module.
 */

/**
 * Change fields type from Float to Decimal.
 */
function farnet_factsheet_flag_update_7001() {

  $fields = ['field_ff_population_density'
  , 'field_ff_surface_area'
  , 'field_ff_total_employment'
  , 'field_ff_fishing'
  , 'field_ff_aquaculture'
  , 'field_ff_processing'
  , 'field_ff_women_employment'
  , 'field_ff_emff'
  , 'field_ff_ms_co_financing'
  , 'field_ff_total_public_budget'
  , 'field_ff_budget_cooperation'
  , 'field_ff_public_actors'
  , 'field_ff_fisheries_actors'
  , 'field_ff_environmental_actors'
  , 'field_ff_other_non_fisheries'
  , 'field_ff_number_staff'
  , 'field_allocated_budget'
  ];

  foreach ($fields as $field) {

    // Update the storage tables.
    $tables = array('field_data', 'field_revision');
    foreach ($tables as $table) {
      $tablename = $table . '_' . $field;
      $fieldname = $field . '_value';
      db_change_field($tablename, $fieldname, $fieldname, array(
        'type' => 'numeric',
        'precision' => 20,
        'scale' => 2,
        'not null' => FALSE,
      ));
    }

    // Fetch the current field configuration.
    $field_config = db_query("SELECT data FROM {field_config} WHERE field_name = :field_name", array(
      ':field_name' => $field,
    ))
      ->fetchObject();
    $data = unserialize($field_config->data);

    // Update the settings entry.
    $data['settings'] = array(
      'precision' => 20,
      'scale' => 2,
      'decimal_separator' => ',',
    );

    // Store the new field config, update the field type at the same time.
    db_update('field_config')
      ->fields(array(
        'data' => serialize($data),
        'type' => 'number_decimal',
      ))
      ->condition('field_name', $field)
      ->execute();
    $instances = field_info_field_map();
    foreach ($instances[$field]['bundles'] as $entity_type => $bundles) {
      foreach ($bundles as $bundle) {
        // Fetch the field instance data.
        $field_config_instance = db_query("SELECT data FROM {field_config_instance}
                                       WHERE field_name = :field_name
                                       AND entity_type = :entity_type
                                       AND bundle = :bundle", array(
                                         ':field_name' => $field,
                                         ':entity_type' => $entity_type,
                                         ':bundle' => $bundle,
                                       ))
          ->fetchObject();
        $data = unserialize($field_config_instance->data);

        // Update it with the new display type.
        $data['display']['default']['type'] = 'number_decimal';

        // Store it back to the database.
        db_update('field_config_instance')
          ->fields(array('data' => serialize($data)))
          ->condition('field_name', $field)
          ->condition('entity_type', $entity_type)
          ->condition('bundle', $bundle)
          ->execute();
      }
    }
  }
}
