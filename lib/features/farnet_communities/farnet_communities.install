<?php

/**
 * @file
 * Install processes for FARNET communities.
 */

include_once 'farnet_communities.install.inc';

/**
 * Implements hook_schema().
 */
function farnet_communities_schema() {
  return ['user_last_contribution' => _farnet_communities_table_schema()];
}

/**
 * Implements hook_install().
 */
function farnet_communities_install() {
  _farnet_communities_update_content_types();

  // Add myFARNET support node and menu item.
  $nid = _farnet_communities_update_create_myfarnet_support_node();
  _farnet_communities_update_create_myfarnet_support_menu_item($nid);
}

/**
 * Set all content types as not required in communities update.
 *
 * Implements hook_update_N().
 */
function farnet_communities_update_7001() {
  _farnet_communities_update_content_types();
}

/**
 * Add the last contribution table.
 */
function farnet_communities_update_7002() {
  db_create_table('user_last_contribution', _farnet_communities_table_schema());
}

/**
 * Add myFARNET support node and menu item.
 */
function farnet_communities_update_7003() {
  $nid = _farnet_communities_update_create_myfarnet_support_node();
  _farnet_communities_update_create_myfarnet_support_menu_item($nid);
  variable_set('myfarnet_support', $nid);
}

/**
 * Add users to the myFARNET support community.
 */
function farnet_communities_update_7004() {
  // Select users.
  $gid = variable_get('myfarnet_support', FALSE);

  if ($gid === FALSE) {
    throw new DrupalUpdateException('The myFARNET support community node is not defined in configuration.');
  }

  $uids = db_query('SELECT uid FROM {users} WHERE uid > 0')->fetchCol();
  $params = [':gid' => $gid, ':entity_type' => 'user'];

  $uids_used = db_query('SELECT etid FROM {og_membership} WHERE gid=:gid AND entity_type=:entity_type', $params)->fetchCol();

  foreach ($uids as $uid) {
    // Just in case, check that the user is not part of the group.
    if (in_array($uid, $uids_used)) {
      continue;
    }

    $entity = user_load($uid);

    // Wrong uid.
    if ($entity === FALSE) {
      continue;
    }

    // Set default values.
    $values = [
      'entity_type' => 'user',
      'entity' => $entity,
      'state' => OG_STATE_ACTIVE,
    ];

    og_group('node', $gid, $values);
  }
}
