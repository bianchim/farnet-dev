<?php

/**
 * @file
 * Code for the Farnet Maps feature.
 */

include_once 'farnet_maps.features.inc';

/**
 * @file
 * Code for the Farnet location module.
 */

/**
 * Used to manage countries names and codes.
 */
include_once drupal_get_path('module', 'farnet_taxonomy') . '/includes/farnet_taxonomy_countries.php';

/**
 * Implements hook_menu().
 */
function farnet_maps_menu() {
  $items['interactive_map'] = [
    'title' => 'Farnet interactive map',
    'description' => 'Provide an interactive map',
    'page callback' => ['drupal_get_form'],
    'page arguments' => ['farnet_maps_form', 1],
    'access arguments' => ['access content'],
    'type' => MENU_NORMAL_ITEM,
  ];
  $items['interactive_map/factsheet_flag'] = [
    'title' => 'Get Factsheet flags areas as separate items',
    'page callback' => '_farnet_maps_ff_areas',
    'access arguments' => TRUE,
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  ];

  return $items;
}

/**
 * Get the coordinates of all Factsheet flags' areas as GeoJSON feed.
 */
function _farnet_maps_ff_areas($country) {
  print ($country);
  global $base_url;
  $rows = array();
  $result = db_query("SELECT node.title AS node_title, node.nid AS nid, node.language AS node_language, node.created AS node_created,
      field_data_field_ne_body.field_ne_body_value AS field_body, field_data_field_farnet_abstract.field_farnet_abstract_value AS field_farnet_abstract
    FROM {node} node
    LEFT JOIN {field_data_field_ne_body} field_data_field_ne_body ON node.nid = field_data_field_ne_body.entity_id AND field_data_field_ne_body.entity_type = 'node'
    LEFT JOIN {field_data_field_farnet_abstract} field_data_field_farnet_abstract ON node.nid = field_data_field_farnet_abstract.entity_id AND field_data_field_farnet_abstract.entity_type = 'node'
    LEFT JOIN {field_data_field_term_country} field_data_field_term_country ON node.nid = field_data_field_term_country.entity_id AND field_data_field_term_country.entity_type = 'node'
    WHERE ( (field_data_field_term_country.field_term_country_tid = :countryid )  AND ( (node.status = '1') AND (node.type IN  ('factsheet_flag')) ))
    ORDER BY node_created DESC", array(':countryid' => $country))->fetchAll();

  foreach ($result as $record) {
    $resultArea = db_query("SELECT node.created AS node_created, field_data_field_area.field_area_value AS field_area
      FROM {node} node
      LEFT JOIN {field_data_field_area} field_data_field_area ON node.nid = field_data_field_area.entity_id AND field_data_field_area.entity_type = 'node'
      WHERE (node.nid = '" . $record->nid . "')
      ORDER BY node_created DESC")->fetchAll();
    $resultLatitude = db_query("SELECT node.created AS node_created, field_data_field_latitude.field_latitude_value AS field_latitude
      FROM {node} node
      LEFT JOIN {field_data_field_latitude} field_data_field_latitude ON node.nid = field_data_field_latitude.entity_id AND field_data_field_latitude.entity_type = 'node'
      WHERE (node.nid = '" . $record->nid . "')
      ORDER BY node_created DESC")->fetchAll();
    $resultLongitude = db_query("SELECT node.created AS node_created, field_data_field_longitude.field_longitude_value AS field_longitude
      FROM {node} node
      LEFT JOIN {field_data_field_longitude} field_data_field_longitude ON node.nid = field_data_field_longitude.entity_id AND field_data_field_longitude.entity_type = 'node'
      WHERE (node.nid = '" . $record->nid . "')
      ORDER BY node_created DESC")->fetchAll();
    // We assume that area, latitude and longitude have coherent index.
    foreach ($resultArea as $index => $recordArea) {
      $rows[$record->nid][$recordArea->field_area] = array(
        'title' => $record->node_title,
        'body' => $record->field_body,
        'farnet_abstract' => $record->field_farnet_abstract,
        'latitude' => $resultLatitude[$index]->field_latitude,
        'longitude' => $resultLongitude[$index]->field_longitude,
      );
    }
  }
  // Format according to expected JSON output.
  $geoJsonFeed = (object) array('type' => 'FeatureCollection', "features" => []);
  foreach ($rows as $nid => $recordNode) {
    foreach ($recordNode as $area => $recordCoord) {
      $alias = drupal_get_path_alias('node/' . $nid);
      $titleLinked = '<a href="' . $base_url . '/' . $alias . '" target="_blank">' . $recordCoord['title'] . '</a>';
      $geometry = (object) array(
        'type' => 'Point',
        "coordinates" => [$recordCoord['longitude'], $recordCoord['latitude']],
      );
      $properties = (object) array(
        'name' => $titleLinked,
        'description' => $recordCoord['body'],
        'Abstract' => $recordCoord['farnet_abstract'],
      );
      $feature = (object) array(
        'type' => 'Feature',
        'geometry' => $geometry,
        'properties' => $properties,
      );
      $geoJsonFeed->features[] = $feature;
    }
  }
  drupal_json_output($geoJsonFeed);
}

/**
 * Build the module form.
 */
function farnet_maps_form($form, &$form_state) {
  global $base_url;

  $form = [];

  $countries_select = array();
  foreach (taxonomy_get_tree(6) as $term) {
    if ($term->depth > 0) {
      $countries_select[$term->tid] = $term->name;
    }
  }
  // Country selected in the form.
  $country = isset($form_state['input']['countries']) ? $form_state['input']['countries'] : 0;

  $form['countries'] = array(
    '#type' => 'select',
    '#title' => t('Countries'),
    '#options' => $countries_select,
    '#default_value' => $country,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Update map'),
  );

  if ($country) {
    // Webtools JSON definition for a map.
    $json_map = '{
      "service": "map",
      "map": {
        "zoom": "2",
        "center": [
          "42.0329",
          "27.4218"
        ]
      },
      "layers": [
        {
          "checkbox": {
            "label": "Elements",
            "features": [
              {
                "label": "flag factsheet",
                "markers": [
                  "http://myproject/url_to_get_geojson"
                ]
              },
              {
                "label": "organisation",
                "markers": [
                  "http://myproject/url_to_get_geojson"
                ],
                "options": {
                  "color": "pink"
                }
              },
              {
                "label": "gp method",
                "markers": [
                  "http://myproject/url_to_get_geojson"
                ],
                "options": {
                  "color": "green"
                }
              }
            ]
          }
        }
      ]
    }';

    // Use the webtools smart loader.
    drupal_add_js(variable_get('nexteuropa_webtools_smartloader_prurl', ''), 'external');

    $json_map_object = json_decode($json_map);
    $json_map_object->layers[0]->checkbox->features[0]->markers[0] = $base_url . "/interactive_map/factsheet_flag/" . $country;
    $json_map_object->layers[0]->checkbox->features[1]->markers[0] = $base_url . "/interactive_map/organisation/" . $country;
    $json_map_object->layers[0]->checkbox->features[2]->markers[0] = $base_url . "/interactive_map/gp_method/" . $country;

    $json_map = json_encode($json_map_object);

    $form['json_map'] = array(
      '#type' => 'item',
      '#markup' => "<script type=\"application/json\">" . strip_tags($json_map) . "</script>",
    );
  }

  return $form;
}

/**
 * Provide the form submit callback.
 */
function farnet_maps_form_submit($form, &$form_state) {
  $form_state['rebuild'] = TRUE;
}
