<?php

/**
 * @file
 * Installs the Farnet taxonomy feature.
 */

include_once 'farnet_taxonomy.install.inc';

/**
 * Implements hook_enable().
 */
function farnet_taxonomy_enable() {
  $t = get_t();

  // Ensure vocabularies exist.
  drupal_flush_all_caches();
  features_revert_module("nexteuropa_news");
  features_revert_module("nexteuropa_event");
  features_revert_module("nexteuropa_faq");
  features_revert_module("farnet_core");
  features_revert_module("farnet_taxonomy");

  // Imports FAQ terms.
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('faq_categories')) {
    include_once 'includes/farnet_taxonomy_faq_categories.php';
    $faq_categories_array = farnet_taxonomy_faq_categories();
    save_multilingual_farnet_taxonomy($faq_categories_array, $vocabulary->vid);
  }
  else {
    watchdog('farnet_taxonomy', "Import faq_categories terms failed.", array(), WATCHDOG_ERROR);
  }

  // Imports theme terms.
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('farnet_theme')) {
    include_once 'includes/farnet_taxonomy_themes.php';
    $themes_array = farnet_taxonomy_themes();
    save_multilingual_farnet_taxonomy($themes_array, $vocabulary->vid);
  }
  else {
    watchdog('farnet_taxonomy', "Import farnet_theme terms failed.", array(), WATCHDOG_ERROR);
  }

  // Imports Languages spoken terms.
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('farnet_languages_spoken')) {
    include_once 'includes/farnet_taxonomy_languages_spoken.php';
    $languages_spoken_array = farnet_taxonomy_languages_spoken();
    save_multilingual_farnet_taxonomy($languages_spoken_array, $vocabulary->vid);
  }
  else {
    watchdog('farnet_taxonomy', "Import farnet_languages_spoken terms failed.", array(), WATCHDOG_ERROR);
  }

  // Imports Publication channels terms.
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('farnet_publication_channels')) {
    include_once 'includes/farnet_taxonomy_publication_channels.php';
    $publication_channels_array = farnet_taxonomy_publication_channels();
    save_multilingual_farnet_taxonomy($publication_channels_array, $vocabulary->vid);
  }
  else {
    watchdog('farnet_taxonomy', "Import farnet_publication_channels terms failed.", array(), WATCHDOG_ERROR);
  }

  // Imports Type Event terms.
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('nexteuropa_event_type')) {
    include_once 'includes/farnet_taxonomy_type_events.php';
    $type_events_array = farnet_taxonomy_type_events();
    save_multilingual_farnet_taxonomy($type_events_array, $vocabulary->vid);
  }
  else {
    watchdog('farnet_taxonomy', "Import nexteuropa_event_type terms failed.", array(), WATCHDOG_ERROR);
  }

  // Imports Type Publication data terms.
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('farnet_type_publication')) {
    include_once 'includes/farnet_taxonomy_type_publications.php';
    $type_pubications_array = farnet_taxonomy_type_publications();
    save_multilingual_farnet_taxonomy($type_pubications_array, $vocabulary->vid);
  }
  else {
    watchdog('farnet_taxonomy', "Import farnet_type_organisation terms failed.", array(), WATCHDOG_ERROR);
  }

  // Import Farnet Type Organisation terms.
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('farnet_type_organisation')) {
    include_once 'includes/farnet_taxonomy_type_organisations.php';
    $type_organisations_array = farnet_taxonomy_type_organisations();
    save_multilingual_farnet_taxonomy($type_organisations_array, $vocabulary->vid);
  }
  else {
    watchdog('farnet_taxonomy', "Import farnet_type_organisation terms failed.", array(), WATCHDOG_ERROR);
  }

  // Import Farnet Country terms.
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('countries')) {
    $vid = $vocabulary->vid;
    // Imports country data.
    include_once 'includes/farnet_taxonomy_countries.php';
    $country_array = farnet_taxonomy_countries();
    foreach ($country_array as $zone => $countries) {
      $term = (object) array('vid' => $vid, 'name' => $zone);
      taxonomy_term_save($term);
      $tid = $term->tid;
      foreach ($countries as $country => $cy_name) {
        $subterm = (object) array(
          'vid' => $vid,
          'name' => $cy_name,
          'parent' => $tid,
        );
        taxonomy_term_save($subterm);

        $term_w = entity_metadata_wrapper('taxonomy_term', $subterm->tid);
        $term_w->field_code->set($country);
        $term_w->save();
      }
    }
  }
  else {
    watchdog('farnet_taxonomy', "Import countries terms failed.", array(), WATCHDOG_ERROR);
  }

  // Imports Type of Area terms.
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('farnet_type_of_area')) {
    include_once 'includes/farnet_taxonomy_type_of_areas.php';
    $type_areas_array = farnet_taxonomy_type_of_areas();
    save_multilingual_farnet_taxonomy($type_areas_array, $vocabulary->vid);
  }
  else {
    watchdog('farnet_taxonomy', "Import farnet_type_of_area terms failed.", array(), WATCHDOG_ERROR);
  }

  // Imports Sea Basins terms.
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('farnet_sea_basins')) {
    include_once 'includes/farnet_taxonomy_sea_basins.php';
    $sea_basins_array = farnet_taxonomy_sea_basins();
    save_multilingual_farnet_taxonomy($sea_basins_array, $vocabulary->vid);
  }
  else {
    watchdog('farnet_taxonomy', "Import farnet_sea_basins terms failed.", array(), WATCHDOG_ERROR);
  }

  drupal_set_message($t('The FARNET Taxonomy feature is now active on your site.'));
}

/**
 * Implements hook_disable().
 */
function farnet_taxonomy_disable() {
  $t = get_t();

  // Deletes all terms of the nexteuropa_faq taxonomy faq_categories.
  $vocabulary = taxonomy_vocabulary_machine_name_load('faq_categories');
  if ($vocabulary) {
    foreach (taxonomy_get_tree($vocabulary->vid) as $term) {
      taxonomy_term_delete($term->tid);
    }
  }

  // Deletes the taxonomy term.
  $vocabulary = taxonomy_vocabulary_machine_name_load('farnet_theme');
  if ($vocabulary) {
    $vid = $vocabulary->vid;
    taxonomy_vocabulary_delete($vid);
  }

  // Deletes the taxonomy term.
  $voc = taxonomy_vocabulary_machine_name_load('farnet_publication_channels');
  if ($voc) {
    $vid = $voc->vid;
    taxonomy_vocabulary_delete($vid);
  }

  // Deletes all terms of the nexteuropa_event taxonomy nexteuropa_event_type.
  $vocabulary = taxonomy_vocabulary_machine_name_load('nexteuropa_event_type');
  if ($vocabulary) {
    foreach (taxonomy_get_tree($vocabulary->vid) as $term) {
      taxonomy_term_delete($term->tid);
    }
  }

  // Deletes all terms of the taxonomy nexteuropa_news_categories.
  // Deletes the taxonomy term.
  $vocabulary = taxonomy_vocabulary_machine_name_load('farnet_type_publication');
  if ($vocabulary) {
    $vid = $vocabulary->vid;
    taxonomy_vocabulary_delete($vid);
  }

  // Deletes the taxonomy term.
  $vocabulary = taxonomy_vocabulary_machine_name_load('farnet_languages_spoken');
  if ($vocabulary) {
    $vid = $vocabulary->vid;
    taxonomy_vocabulary_delete($vid);
  }

  // Deletes the taxonomy term.
  $vocabulary = taxonomy_vocabulary_machine_name_load('farnet_type_organisation');
  if ($vocabulary) {
    $vid = $vocabulary->vid;
    taxonomy_vocabulary_delete($vid);
  }

  // Deletes the taxonomy term.
  $vocabulary = taxonomy_vocabulary_machine_name_load('countries');
  if ($vocabulary) {
    $vid = $vocabulary->vid;
    taxonomy_vocabulary_delete($vid);
  }

  // Deletes the taxonomy term.
  $vocabulary = taxonomy_vocabulary_machine_name_load('farnet_type_of_area');
  if ($vocabulary) {
    $vid = $vocabulary->vid;
    taxonomy_vocabulary_delete($vid);
  }

  // Deletes the taxonomy term.
  $vocabulary = taxonomy_vocabulary_machine_name_load('farnet_sea_basins');
  if ($vocabulary) {
    $vid = $vocabulary->vid;
    taxonomy_vocabulary_delete($vid);
  }

  drupal_set_message($t('The FARNET Taxonomy feature is now disabled on your site.'));
}

/**
 * Implements hook_install().
 */
function farnet_taxonomy_install() {
  $t = get_t();
  drupal_set_message($t('The FARNET Taxonomy feature is now installed on your site.'));
}

/**
 * Implements hook_uninstall().
 */
function farnet_taxonomy_uninstall() {
  $t = get_t();
  drupal_set_message($t('The FARNET Taxonomy feature is now uninstalled from your site.'));
}

/**
 * Update farnet_taxonomy for farnet_txonomy_type_organisation.
 */
function farnet_taxonomy_update_7101() {
  // Update Farnet Type Organisation terms.
  if ($vocabulary = taxonomy_vocabulary_machine_name_load('farnet_type_organisation')) {
    include_once 'includes/farnet_taxonomy_type_organisations.php';
    $type_organisations_array = farnet_taxonomy_type_organisations();
    save_multilingual_farnet_taxonomy($type_organisations_array, $vocabulary->vid);
  }
  else {
    watchdog('farnet_taxonomy', "Update farnet_type_organisation terms failed.", array(), WATCHDOG_ERROR);
  }
}
